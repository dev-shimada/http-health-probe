name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, edited, synchronize, reopened ]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Create an artifact of the repository to use in parallel jobs
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with:
          name: repo
          path: .

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
      
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      
      - name: Download Go modules
        shell: bash
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: go mod download
      
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

  vet:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
      
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      
      - name: Download Go modules
        shell: bash
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        run: go mod download

      - name: Go Vet
        run: go vet ./...

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
      
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Download Go modules
        shell: bash
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        run: go mod download

      - name: Build
        run: go build

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: repo
      
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
      
      - name: Download Go modules
        shell: bash
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        run: go mod download
      
      - name: Test
        run: go test -v ./...
